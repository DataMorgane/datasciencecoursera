nrow(y1)
order(y1[[11]],y1$Hospital.Name)
order(y1[[11]])
y1[[11]]
?order
order(y1[[11]],y1$Hospital.Name,na.last = NA)
order(y1[[11]],y1$Hospital.Name,na.last = T)
order(y1[[11]],y1$Hospital.Name,na.last = F)
y2 = as.numeric(y1[[11]])
y2
order(y2)
order(y2, na.last=NA)
y1[[11]] = as.numeric(y1[[11]])
order(y1[[11]],y1$Hospital.Name,na.last = NA)
order(y1[[11]],na.last = NA)
y1[[11]]
y1[[11]][4] = 15.7
y1[[11]]
order(y1[[11]],na.last = NA)
order(y1[[11]],y1$Hospital.Name,na.last = NA)
y1$Hospital.Name
y 3 = order(y1[[11]],y1$Hospital.Name,na.last = NA)
y3 = order(y1[[11]],y1$Hospital.Name,na.last = NA)
y3[1]
y1$Hospital.Name[y3]
y1$Hospital.Name[y3[1]]
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/best.R')
best("TX","heart attack")
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/best.R')
best("TX","heart attack")
?as.numeric
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/best.R')
best("TX","heart attack")
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/best.R')
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","pneumonia")
best("NY","peumonia")
submit()
submit()
submit()
is.numeric(5)
is.numeric("bla")
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
t = rankall("heart failure")
t = rankall("heart failure")
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
t = rankall("heart failure")
t
str(t)
summary(t)
length(t)
head(t[1])
length(t)
p = data.frame(b=1,c="bla")
p
p = data.frame(b=1,c="bli")
p
p = c(p,b=2,c="bla")
p
p = data.frame(b=1,c="bli")
rbind(p,c(2,"bla"))
rbind(p,2,"bla")
?rbind
q = data.frame(b = 2, c="bla")
rbind(p,q)
l = c(1,2,3,4)
l[NA]
l[NULL]
l[NA]
l[NA][1]
colnames(t)
rownames(t)
t$AK
factor(t)
names(t)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
outcome_state[[11]]
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
?as.data.frame
?data.frame
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
4706/54
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Coursera_Data_Science/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
submit()
submit()
submit()
submit()
library(swirl)
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
play()
setwd("~/Coursera_Data_Science/datasciencecoursera")
getwd()
old.dir <- getwd()
nxt()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(from = "mytest.R", to = "mytest2.R")
file.copy(from = "mytest2.R", to = "mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"), recursive = T)
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,40)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, " ")
paste(my_char, collapse = " ")
my_name = c(my_char, "Morgane")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients = c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
names <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) = cnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello", "World!")
submit()
mad_libs(place = "Paris", adjective = "pretty", noun = "laptop")
submit()
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shape, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flag$animate)
table(flags$animate)
tapply(flags$animare, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips = sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(rep(1,100), size=1, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, mean=10)
?rpois
rpois(5, 10)
my_pois = replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm = colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
clas(d1)
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units="days")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main="My plot")
plot(cars, main = "My plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
play()
dim(ntcars)
dim(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(mpg ~ cyl, data=mtcars)
hist(mtcars$mpg)
swirl()
install_from_swirl("Open Intro")
q()
